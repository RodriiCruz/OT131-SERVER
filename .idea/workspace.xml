<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="11e55f7d-e6d5-409a-82c6-e82a04542458" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/OngApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/OngApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/controller/ActivitiesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/controller/ActivitiesController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/controller/OrganizationsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/controller/OrganizationsController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/controller/UsersController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/controller/UsersController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/security/WebSecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/security/WebSecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/util/Constants.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/alkemy/ong/util/Constants.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/OngApplication.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/OngApplication.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/controller/ExceptionHandlerController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/controller/ExceptionHandlerController.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/controller/OrganizationsController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/controller/OrganizationsController.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/controller/SlidesController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/controller/SlidesController.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/controller/UsersController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/controller/UsersController.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/CategoriesDTO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/CategoriesDTO.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/ErrorDTO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/ErrorDTO.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/LoginUsersDTO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/LoginUsersDTO.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/MemberDTO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/MemberDTO.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/NewUsersDTO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/NewUsersDTO.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/NewsDTO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/NewsDTO.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/OrganizationsDTO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/OrganizationsDTO.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersAutenticateDto.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersAutenticateDto.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersDTO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersDTO.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersDtoResponse.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersDtoResponse.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersNoAuthDto.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersNoAuthDto.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersOkDto.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersOkDto.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersRegisterDTO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/dto/UsersRegisterDTO.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mail/sendGridEmailConfig.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mail/sendGridEmailConfig.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/CategoriesMapper.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/CategoriesMapper.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/MembersMapper.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/MembersMapper.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/NewsMapper.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/NewsMapper.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/SlidesMapper.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/SlidesMapper.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/UsersMapper.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/mapper/UsersMapper.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Categories.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Categories.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Members.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Members.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/News.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/News.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Organizations.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Organizations.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Roles.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Roles.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Slides.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Slides.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Users.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/Users.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/WelcomeEmail.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/model/WelcomeEmail.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/CategoriesRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/CategoriesRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/MembersRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/MembersRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/NewsRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/NewsRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/OrganizationsRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/OrganizationsRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/RolesRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/RolesRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/SlidesRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/SlidesRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/UsersRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/repository/UsersRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/security/WebSecurityConfig.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/security/WebSecurityConfig.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/CategoriesService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/CategoriesService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/CategoriesServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/CategoriesServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/EmailService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/EmailService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/EmailServiceImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/EmailServiceImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/MembersService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/MembersService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/MembersServicesImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/MembersServicesImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/NewsService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/NewsService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/NewsServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/NewsServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/OrganizationsService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/OrganizationsService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/OrganizationsServiceImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/OrganizationsServiceImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/SlidesService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/SlidesService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/SlidesServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/SlidesServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/UsersDetailsServiceImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/UsersDetailsServiceImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/UsersService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/UsersService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/UsersServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/service/UsersServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/Constants.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/Constants.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/Enums.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/Enums.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/JWT.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/JWT.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/JwtAuthFilter.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/JwtAuthFilter.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/RoleName.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/alkemy/ong/util/RoleName.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/test-classes/com/alkemy/ong/OngApplicationTests.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/com/alkemy/ong/OngApplicationTests.class" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="develop" />
        <entry key="$PROJECT_DIR$" value="develop" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="24FTSOarLZEq9VgzQpOUghb473k" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
  </component>
  <component name="RunManager">
    <configuration default="true" type="JetRunConfigurationType">
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ong [spring-boot:run]" type="MavenRunConfiguration" factoryName="Maven" nameIsGenerated="true">
      <MavenSettings>
        <option name="myGeneralSettings" />
        <option name="myRunnerSettings" />
        <option name="myRunnerParameters">
          <MavenRunnerParameters>
            <option name="profiles">
              <set />
            </option>
            <option name="goals">
              <list>
                <option value="spring-boot:run" />
              </list>
            </option>
            <option name="pomFileName" />
            <option name="profilesMap">
              <map />
            </option>
            <option name="resolveToWorkspace" value="false" />
            <option name="workingDirPath" value="$PROJECT_DIR$" />
          </MavenRunnerParameters>
        </option>
      </MavenSettings>
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="11e55f7d-e6d5-409a-82c6-e82a04542458" name="Changes" comment="" />
      <created>1643225333870</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1643225333870</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>